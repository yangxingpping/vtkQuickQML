// This file is generated by kconfig_compiler_kf5 from config.kcfg.
// All changes you do to this file will be lost.

#include "config.h"

Config::Config( const QString & transport, const QString & folder, QObject *parent )
  : KConfigSkeleton( QStringLiteral( "heherc" ) )
  , mParamtransport(transport)
  , mParamfolder(folder)
{
  setParent(parent);
  KConfigCompilerSignallingItem::NotifyFunction notifyFunction = static_cast<KConfigCompilerSignallingItem::NotifyFunction>(&Config::itemChanged);

  setCurrentGroup( QStringLiteral( "General" ) );

  KConfigCompilerSignallingItem  *itemLastSeenVersion;
  KConfigSkeleton::ItemString  *innerItemLastSeenVersion;
  innerItemLastSeenVersion = new KConfigSkeleton::ItemString( currentGroup(), QStringLiteral( "LastSeenVersion" ), mLastSeenVersion );
  itemLastSeenVersion = new KConfigCompilerSignallingItem(innerItemLastSeenVersion, this, notifyFunction, signalLastSeenVersionChanged);
  addItem( itemLastSeenVersion, QStringLiteral( "LastSeenVersion" ) );
  KConfigCompilerSignallingItem  *itemLiveEnvironment;
  KConfigSkeleton::ItemBool  *innerItemLiveEnvironment;
  innerItemLiveEnvironment = new KConfigSkeleton::ItemBool( currentGroup(), QStringLiteral( "LiveEnvironment" ), mLiveEnvironment, false );
  itemLiveEnvironment = new KConfigCompilerSignallingItem(innerItemLiveEnvironment, this, notifyFunction, signalLiveEnvironmentChanged);
  addItem( itemLiveEnvironment, QStringLiteral( "LiveEnvironment" ) );
  KConfigCompilerSignallingItem  *itemLiveInstaller;
  KConfigSkeleton::ItemString  *innerItemLiveInstaller;
  innerItemLiveInstaller = new KConfigSkeleton::ItemString( currentGroup(), QStringLiteral( "LiveInstaller" ), mLiveInstaller );
  itemLiveInstaller = new KConfigCompilerSignallingItem(innerItemLiveInstaller, this, notifyFunction, signalLiveInstallerChanged);
  addItem( itemLiveInstaller, QStringLiteral( "LiveInstaller" ) );
  KConfigCompilerSignallingItem  *itemShowUpdatePage;
  KConfigSkeleton::ItemBool  *innerItemShowUpdatePage;
  innerItemShowUpdatePage = new KConfigSkeleton::ItemBool( currentGroup(), QStringLiteral( "ShowUpdatePage" ), mShowUpdatePage, true );
  itemShowUpdatePage = new KConfigCompilerSignallingItem(innerItemShowUpdatePage, this, notifyFunction, signalShowUpdatePageChanged);
  addItem( itemShowUpdatePage, QStringLiteral( "ShowUpdatePage" ) );
  KConfigCompilerSignallingItem  *itemAutomaticUpdatePreview;
  KConfigSkeleton::ItemBool  *innerItemAutomaticUpdatePreview;
  innerItemAutomaticUpdatePreview = new KConfigSkeleton::ItemBool( currentGroup(), QStringLiteral( "AutomaticUpdatePreview" ), mAutomaticUpdatePreview, false );
  itemAutomaticUpdatePreview = new KConfigCompilerSignallingItem(innerItemAutomaticUpdatePreview, this, notifyFunction, signalAutomaticUpdatePreviewChanged);
  addItem( itemAutomaticUpdatePreview, QStringLiteral( "AutomaticUpdatePreview" ) );
}

bool Config::defaultLiveEnvironmentValue_helper() const
{

  return false;
}

bool Config::defaultShowUpdatePageValue_helper() const
{

  return true;
}

bool Config::defaultAutomaticUpdatePreviewValue_helper() const
{

  return false;
}

Config::~Config()
{
}


void Config::itemChanged(quint64 signalFlag) {

  switch (signalFlag) {
  case signalLastSeenVersionChanged:
    Q_EMIT LastSeenVersionChanged();
    break;
  case signalLiveEnvironmentChanged:
    Q_EMIT LiveEnvironmentChanged();
    break;
  case signalLiveInstallerChanged:
    Q_EMIT LiveInstallerChanged();
    break;
  case signalShowUpdatePageChanged:
    Q_EMIT ShowUpdatePageChanged();
    break;
  case signalAutomaticUpdatePreviewChanged:
    Q_EMIT AutomaticUpdatePreviewChanged();
    break;
  }
}

#include "config.moc"

